#!/usr/bin/env ruby
require "optionparser"
require "active_support"
require "active_support/all"

@estimation = nil
@simulate = false
@issue_number = nil

def error(title)
  STDERR.puts title
  exit 1
end

def confirm(title)
  printf "#{title}\npress 'y' to continue: "
  prompt = STDIN.gets.chomp
  prompt == 'y'
end

def sh(command)
  return puts "▶️  #{command}" if @simulate

  error "could not execute '#{command}'" unless system(command)
end

def sh_get(command)
  value = `#{command}`
  error "could not execute '#{command}'" unless $? == 0

  value.strip
end

def current_branch
  sh_get "git rev-parse --abbrev-ref HEAD"
end

OptionParser.new do |opts|
  opts.banner = "Usage: pr [options] [name]\nDefaults: pr" + File::SEPARATOR
  opts.on("-e", "--estimation ESTIMATION", Integer, "Estimated time in hours.") do |e|
    @estimation = e.presence
  end
  opts.on("-s", "--simulate", "Simulate the actions: prints out the write-commands instead of executing them, prefixed with ▶️ .") do
    @simulate = true
  end
  opts.on("-i", "--issue ISSUE_NUMBER", Integer, "Create a pull-request fixing an issue with the provided number.") do |i|
    @issue_number = i
  end
end.parse!

name =
  if @issue_number
    sh_get("hub issue show #{@issue_number} -f %t")
  else
    ARGV.join(" ")
  end
error "Please specify a name for your Pull Request" if name.blank?

title = name
title += " [#{@estimation}]" if @estimation
title += "\n\nfixes ##{@issue_number}" if @issue_number

branch = "feature/"
branch += "#{@issue_number}_" if @issue_number
branch += name.parameterize.underscore
base_branch = current_branch

exit 1 unless ["master", "main", "develop"].include?(base_branch) || confirm("Your base branch #{base_branch} doesn't seem to be a common base branch name. Do you want to continue?")

puts "Creating new PR for feature '#{title}'"

puts "Creating branch #{branch}"
sh "git checkout -b #{branch}"

puts "Creating empty commit"
sh "git commit -m 'initial commit for #{name}' --allow-empty"

puts "Pushing to origin"
sh "git push -u origin #{branch}"

puts "Creating pull request"
sh "hub pull-request -d -m '#{title}' -b #{base_branch}"
